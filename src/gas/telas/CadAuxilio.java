/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gas.telas;

import com.sun.glass.events.KeyEvent;
import gas.basicas.Auxilio;
import gas.basicas.Voluntario;
import gas.regra.RNAuxilio;
import gas.util.CustomDocument;
import gas.util.DAOException;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabriel Augusto
 */
public class CadAuxilio extends javax.swing.JInternalFrame {

    private RNAuxilio rnAuxilio;
    private Voluntario voluntario;
    
    /** Creates new form CadDoacao
     * @param x */
    public CadAuxilio(Voluntario x) {
        initComponents();
        rnAuxilio = new RNAuxilio();
        this.voluntario = x;
        txtDescricao.setDocument(new CustomDocument());
        lista();
        txtDescricao.grabFocus();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAuxilio = new javax.swing.JTable();
        txtDescricao = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();

        setTitle("Cadastro de Auxílio");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Descrição:");

        tbAuxilio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Auxílio", "Descrição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbAuxilio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAuxilioMouseClicked(evt);
            }
        });
        tbAuxilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbAuxilioKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbAuxilio);
        if (tbAuxilio.getColumnModel().getColumnCount() > 0) {
            tbAuxilio.getColumnModel().getColumn(0).setMinWidth(55);
            tbAuxilio.getColumnModel().getColumn(0).setPreferredWidth(55);
            tbAuxilio.getColumnModel().getColumn(0).setMaxWidth(55);
        }

        txtDescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescricaoKeyPressed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        btnCadastrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCadastrarKeyPressed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.setFocusable(false);
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gas/util/imagens/miniGAS.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescricao))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSair)
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadastrar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
       this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
    
        if(this.voluntario.getAcessoUsuario().getCadAux().equalsIgnoreCase("S")){
        
            Auxilio auxilio = new Auxilio();
        
        auxilio.setDescricao(txtDescricao.getText());
       
        
        try {
            rnAuxilio.inserir(auxilio);
            txtDescricao.setText("");
            lista();
            txtDescricao.grabFocus();
        } catch (DAOException | SQLException ex) {
            
        }
        
            
        }else{
            JOptionPane.showMessageDialog(this,"Usuário sem permissão.","Permissão",JOptionPane.ERROR_MESSAGE);
        }
        
        
        
   
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void txtDescricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescricaoKeyPressed
        
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnCadastrar.grabFocus();
        }
        
        
    }//GEN-LAST:event_txtDescricaoKeyPressed

    private void btnCadastrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCadastrarKeyPressed
       
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnCadastrar.doClick();
            
            
        }
        
        
    }//GEN-LAST:event_btnCadastrarKeyPressed

    private void tbAuxilioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAuxilioMouseClicked
        
    }//GEN-LAST:event_tbAuxilioMouseClicked

    private void tbAuxilioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbAuxilioKeyPressed
       
        if(evt.getKeyCode() == KeyEvent.VK_DELETE ){
            
            Auxilio auxilioEx = new Auxilio();
            
                int linha;
   
                        linha = tbAuxilio.getSelectedRow();
                        auxilioEx.setNr_Aux(Integer.parseInt(tbAuxilio.getValueAt(linha,0).toString()));
                        
              try {
                   int confirma = JOptionPane.showConfirmDialog(this,"Tem certeza que deseja excluir este Auxílio?","Excluir Auxílio",JOptionPane.YES_NO_CANCEL_OPTION);
                if(confirma == JOptionPane.YES_OPTION){
                 
                    if(this.voluntario.getAcessoUsuario().getExcAux().equalsIgnoreCase("S")){
                     
                        rnAuxilio.excluir(auxilioEx);
                        JOptionPane.showMessageDialog(this,"Excluido com Sucesso!","",JOptionPane.INFORMATION_MESSAGE);
                        lista();

                    }else{
                        JOptionPane.showMessageDialog(this,"Usuário sem permissão.","Permissão",JOptionPane.ERROR_MESSAGE);
                    }
                    
                }
                  
              } catch (DAOException | SQLException ex) {
                 
              }

          
        }else if(evt.getKeyCode() == KeyEvent.VK_ENTER ){ // Alterar Auxílio     
            
            Auxilio auxilioAlt = new Auxilio();
            
                int linha;
   
                        linha = tbAuxilio.getSelectedRow();
                        auxilioAlt.setNr_Aux(Integer.parseInt(tbAuxilio.getValueAt(linha,0).toString()));
                        auxilioAlt.setDescricao(tbAuxilio.getValueAt(linha, 1).toString());
                        
              try {
                   int confirma = JOptionPane.showConfirmDialog(this,"Tem certeza que deseja alterar a descrição deste Auxílio?","Alterar Auxílio",JOptionPane.YES_NO_CANCEL_OPTION);
                if(confirma == JOptionPane.YES_OPTION){
                 
                    if(this.voluntario.getAcessoUsuario().getAltAux().equalsIgnoreCase("S")){
                     
                        rnAuxilio.alterar(auxilioAlt);
                        JOptionPane.showMessageDialog(this,"Alterado com Sucesso!","",JOptionPane.INFORMATION_MESSAGE);
                        lista();

                    }else{
                        JOptionPane.showMessageDialog(this,"Usuário sem permissão.","Permissão",JOptionPane.ERROR_MESSAGE);
                    }
                    
                }
                  
              } catch (DAOException | SQLException ex) {
                 
              }

          
        }
        
    }//GEN-LAST:event_tbAuxilioKeyPressed

    
    public void lista(){
        RNAuxilio rnAux = new RNAuxilio(); //CRIAR A INSTANCIA DA FACHADA
        DefaultTableModel modelo = new DefaultTableModel(); // INSTANCIA O OBJETO PADRÃO DE TABELA - ADICIONE A IMPORTAÇÃO
        ArrayList<Auxilio> lista = new ArrayList(); // CRIA UMA LISTA, DE ARRAYLIST DE LIVRO
        try {
            lista =  rnAux.listarAuxilio(); // BUSCA OS DADOS DO BANCO PARA A LISTA
        } catch (Exception ex) {
            
        }   
       modelo = (DefaultTableModel) tbAuxilio.getModel(); // CHECA O JTABLE PARA RECEBER OS DADOS
        if(modelo.getRowCount() > 0){  //se existir linha 
            modelo.setRowCount(0); // apaga todas as linhas
        }
        for (Auxilio auxilio : lista) { 
            modelo.addRow(new Object[]{auxilio.getNr_Aux(),
                                       auxilio.getDescricao()
                                       
            });
        } // TRAS AS INFORMAÇÕES NA TABELA COM OS DADOS SOLICITADOS.
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbAuxilio;
    private javax.swing.JTextField txtDescricao;
    // End of variables declaration//GEN-END:variables

}
